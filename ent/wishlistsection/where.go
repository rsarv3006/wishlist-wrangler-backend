// Code generated by ent, DO NOT EDIT.

package wishlistsection

import (
	"time"
	"wishlist-wrangler-api/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLTE(FieldID, id))
}

// Value applies equality check predicate on the "value" field. It's identical to ValueEQ.
func Value(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldValue, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldCreatedAt, v))
}

// WishlistID applies equality check predicate on the "wishlist_id" field. It's identical to WishlistIDEQ.
func WishlistID(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldWishlistID, v))
}

// TemplateSectionID applies equality check predicate on the "template_section_id" field. It's identical to TemplateSectionIDEQ.
func TemplateSectionID(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldTemplateSectionID, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v Type) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v Type) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...Type) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...Type) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldType, vs...))
}

// ValueEQ applies the EQ predicate on the "value" field.
func ValueEQ(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldValue, v))
}

// ValueNEQ applies the NEQ predicate on the "value" field.
func ValueNEQ(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldValue, v))
}

// ValueIn applies the In predicate on the "value" field.
func ValueIn(vs ...string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldValue, vs...))
}

// ValueNotIn applies the NotIn predicate on the "value" field.
func ValueNotIn(vs ...string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldValue, vs...))
}

// ValueGT applies the GT predicate on the "value" field.
func ValueGT(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGT(FieldValue, v))
}

// ValueGTE applies the GTE predicate on the "value" field.
func ValueGTE(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGTE(FieldValue, v))
}

// ValueLT applies the LT predicate on the "value" field.
func ValueLT(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLT(FieldValue, v))
}

// ValueLTE applies the LTE predicate on the "value" field.
func ValueLTE(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLTE(FieldValue, v))
}

// ValueContains applies the Contains predicate on the "value" field.
func ValueContains(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldContains(FieldValue, v))
}

// ValueHasPrefix applies the HasPrefix predicate on the "value" field.
func ValueHasPrefix(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldHasPrefix(FieldValue, v))
}

// ValueHasSuffix applies the HasSuffix predicate on the "value" field.
func ValueHasSuffix(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldHasSuffix(FieldValue, v))
}

// ValueEqualFold applies the EqualFold predicate on the "value" field.
func ValueEqualFold(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEqualFold(FieldValue, v))
}

// ValueContainsFold applies the ContainsFold predicate on the "value" field.
func ValueContainsFold(v string) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldContainsFold(FieldValue, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLTE(FieldCreatedAt, v))
}

// WishlistIDEQ applies the EQ predicate on the "wishlist_id" field.
func WishlistIDEQ(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldWishlistID, v))
}

// WishlistIDNEQ applies the NEQ predicate on the "wishlist_id" field.
func WishlistIDNEQ(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldWishlistID, v))
}

// WishlistIDIn applies the In predicate on the "wishlist_id" field.
func WishlistIDIn(vs ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldWishlistID, vs...))
}

// WishlistIDNotIn applies the NotIn predicate on the "wishlist_id" field.
func WishlistIDNotIn(vs ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldWishlistID, vs...))
}

// WishlistIDGT applies the GT predicate on the "wishlist_id" field.
func WishlistIDGT(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGT(FieldWishlistID, v))
}

// WishlistIDGTE applies the GTE predicate on the "wishlist_id" field.
func WishlistIDGTE(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGTE(FieldWishlistID, v))
}

// WishlistIDLT applies the LT predicate on the "wishlist_id" field.
func WishlistIDLT(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLT(FieldWishlistID, v))
}

// WishlistIDLTE applies the LTE predicate on the "wishlist_id" field.
func WishlistIDLTE(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLTE(FieldWishlistID, v))
}

// TemplateSectionIDEQ applies the EQ predicate on the "template_section_id" field.
func TemplateSectionIDEQ(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldEQ(FieldTemplateSectionID, v))
}

// TemplateSectionIDNEQ applies the NEQ predicate on the "template_section_id" field.
func TemplateSectionIDNEQ(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNEQ(FieldTemplateSectionID, v))
}

// TemplateSectionIDIn applies the In predicate on the "template_section_id" field.
func TemplateSectionIDIn(vs ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldIn(FieldTemplateSectionID, vs...))
}

// TemplateSectionIDNotIn applies the NotIn predicate on the "template_section_id" field.
func TemplateSectionIDNotIn(vs ...uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldNotIn(FieldTemplateSectionID, vs...))
}

// TemplateSectionIDGT applies the GT predicate on the "template_section_id" field.
func TemplateSectionIDGT(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGT(FieldTemplateSectionID, v))
}

// TemplateSectionIDGTE applies the GTE predicate on the "template_section_id" field.
func TemplateSectionIDGTE(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldGTE(FieldTemplateSectionID, v))
}

// TemplateSectionIDLT applies the LT predicate on the "template_section_id" field.
func TemplateSectionIDLT(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLT(FieldTemplateSectionID, v))
}

// TemplateSectionIDLTE applies the LTE predicate on the "template_section_id" field.
func TemplateSectionIDLTE(v uuid.UUID) predicate.WishlistSection {
	return predicate.WishlistSection(sql.FieldLTE(FieldTemplateSectionID, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WishlistSection) predicate.WishlistSection {
	return predicate.WishlistSection(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WishlistSection) predicate.WishlistSection {
	return predicate.WishlistSection(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WishlistSection) predicate.WishlistSection {
	return predicate.WishlistSection(sql.NotPredicates(p))
}
