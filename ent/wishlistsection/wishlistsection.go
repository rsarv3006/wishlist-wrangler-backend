// Code generated by ent, DO NOT EDIT.

package wishlistsection

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the wishlistsection type in the database.
	Label = "wishlist_section"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldWishlistID holds the string denoting the wishlist_id field in the database.
	FieldWishlistID = "wishlist_id"
	// FieldTemplateSectionID holds the string denoting the template_section_id field in the database.
	FieldTemplateSectionID = "template_section_id"
	// Table holds the table name of the wishlistsection in the database.
	Table = "wishlist_sections"
)

// Columns holds all SQL columns for wishlistsection fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldValue,
	FieldCreatedAt,
	FieldWishlistID,
	FieldTemplateSectionID,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// ValueValidator is a validator for the "value" field. It is called by the builders before save.
	ValueValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeTEXT  Type = "TEXT"
	TypeIMAGE Type = "IMAGE"
	TypeVIDEO Type = "VIDEO"
	TypeLINK  Type = "LINK"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeTEXT, TypeIMAGE, TypeVIDEO, TypeLINK:
		return nil
	default:
		return fmt.Errorf("wishlistsection: invalid enum value for type field: %q", _type)
	}
}

// OrderOption defines the ordering options for the WishlistSection queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// ByValue orders the results by the value field.
func ByValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldValue, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByWishlistID orders the results by the wishlist_id field.
func ByWishlistID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWishlistID, opts...).ToFunc()
}

// ByTemplateSectionID orders the results by the template_section_id field.
func ByTemplateSectionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTemplateSectionID, opts...).ToFunc()
}
