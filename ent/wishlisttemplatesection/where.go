// Code generated by ent, DO NOT EDIT.

package wishlisttemplatesection

import (
	"time"
	"wishlist-wrangler-api/ent/predicate"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldTitle, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldCreatedAt, v))
}

// WishlistTemplateID applies equality check predicate on the "wishlist_template_id" field. It's identical to WishlistTemplateIDEQ.
func WishlistTemplateID(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldWishlistTemplateID, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldType, v))
}

// SectionId applies equality check predicate on the "sectionId" field. It's identical to SectionIdEQ.
func SectionId(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldSectionId, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContainsFold(FieldTitle, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldCreatedAt, v))
}

// WishlistTemplateIDEQ applies the EQ predicate on the "wishlist_template_id" field.
func WishlistTemplateIDEQ(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldWishlistTemplateID, v))
}

// WishlistTemplateIDNEQ applies the NEQ predicate on the "wishlist_template_id" field.
func WishlistTemplateIDNEQ(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldWishlistTemplateID, v))
}

// WishlistTemplateIDIn applies the In predicate on the "wishlist_template_id" field.
func WishlistTemplateIDIn(vs ...uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldWishlistTemplateID, vs...))
}

// WishlistTemplateIDNotIn applies the NotIn predicate on the "wishlist_template_id" field.
func WishlistTemplateIDNotIn(vs ...uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldWishlistTemplateID, vs...))
}

// WishlistTemplateIDGT applies the GT predicate on the "wishlist_template_id" field.
func WishlistTemplateIDGT(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldWishlistTemplateID, v))
}

// WishlistTemplateIDGTE applies the GTE predicate on the "wishlist_template_id" field.
func WishlistTemplateIDGTE(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldWishlistTemplateID, v))
}

// WishlistTemplateIDLT applies the LT predicate on the "wishlist_template_id" field.
func WishlistTemplateIDLT(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldWishlistTemplateID, v))
}

// WishlistTemplateIDLTE applies the LTE predicate on the "wishlist_template_id" field.
func WishlistTemplateIDLTE(v uuid.UUID) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldWishlistTemplateID, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldType, v))
}

// TypeContains applies the Contains predicate on the "type" field.
func TypeContains(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContains(FieldType, v))
}

// TypeHasPrefix applies the HasPrefix predicate on the "type" field.
func TypeHasPrefix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasPrefix(FieldType, v))
}

// TypeHasSuffix applies the HasSuffix predicate on the "type" field.
func TypeHasSuffix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasSuffix(FieldType, v))
}

// TypeEqualFold applies the EqualFold predicate on the "type" field.
func TypeEqualFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEqualFold(FieldType, v))
}

// TypeContainsFold applies the ContainsFold predicate on the "type" field.
func TypeContainsFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContainsFold(FieldType, v))
}

// SectionIdEQ applies the EQ predicate on the "sectionId" field.
func SectionIdEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEQ(FieldSectionId, v))
}

// SectionIdNEQ applies the NEQ predicate on the "sectionId" field.
func SectionIdNEQ(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNEQ(FieldSectionId, v))
}

// SectionIdIn applies the In predicate on the "sectionId" field.
func SectionIdIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldIn(FieldSectionId, vs...))
}

// SectionIdNotIn applies the NotIn predicate on the "sectionId" field.
func SectionIdNotIn(vs ...string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldNotIn(FieldSectionId, vs...))
}

// SectionIdGT applies the GT predicate on the "sectionId" field.
func SectionIdGT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGT(FieldSectionId, v))
}

// SectionIdGTE applies the GTE predicate on the "sectionId" field.
func SectionIdGTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldGTE(FieldSectionId, v))
}

// SectionIdLT applies the LT predicate on the "sectionId" field.
func SectionIdLT(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLT(FieldSectionId, v))
}

// SectionIdLTE applies the LTE predicate on the "sectionId" field.
func SectionIdLTE(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldLTE(FieldSectionId, v))
}

// SectionIdContains applies the Contains predicate on the "sectionId" field.
func SectionIdContains(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContains(FieldSectionId, v))
}

// SectionIdHasPrefix applies the HasPrefix predicate on the "sectionId" field.
func SectionIdHasPrefix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasPrefix(FieldSectionId, v))
}

// SectionIdHasSuffix applies the HasSuffix predicate on the "sectionId" field.
func SectionIdHasSuffix(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldHasSuffix(FieldSectionId, v))
}

// SectionIdEqualFold applies the EqualFold predicate on the "sectionId" field.
func SectionIdEqualFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldEqualFold(FieldSectionId, v))
}

// SectionIdContainsFold applies the ContainsFold predicate on the "sectionId" field.
func SectionIdContainsFold(v string) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.FieldContainsFold(FieldSectionId, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.WishlistTemplateSection) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.WishlistTemplateSection) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.WishlistTemplateSection) predicate.WishlistTemplateSection {
	return predicate.WishlistTemplateSection(sql.NotPredicates(p))
}
