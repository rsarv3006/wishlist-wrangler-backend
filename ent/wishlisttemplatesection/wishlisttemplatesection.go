// Code generated by ent, DO NOT EDIT.

package wishlisttemplatesection

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the wishlisttemplatesection type in the database.
	Label = "wishlist_template_section"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldWishlistTemplateID holds the string denoting the wishlist_template_id field in the database.
	FieldWishlistTemplateID = "wishlist_template_id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldSectionId holds the string denoting the sectionid field in the database.
	FieldSectionId = "section_id"
	// Table holds the table name of the wishlisttemplatesection in the database.
	Table = "wishlist_template_sections"
)

// Columns holds all SQL columns for wishlisttemplatesection fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldCreatedAt,
	FieldWishlistTemplateID,
	FieldType,
	FieldSectionId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// SectionIdValidator is a validator for the "sectionId" field. It is called by the builders before save.
	SectionIdValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the WishlistTemplateSection queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByWishlistTemplateID orders the results by the wishlist_template_id field.
func ByWishlistTemplateID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWishlistTemplateID, opts...).ToFunc()
}

// ByType orders the results by the type field.
func ByType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldType, opts...).ToFunc()
}

// BySectionId orders the results by the sectionId field.
func BySectionId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSectionId, opts...).ToFunc()
}
